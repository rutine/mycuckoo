<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    说明: RoleMapper映射文件
    
    @author rutine
    @time Sep 23, 2014 10:14:14 AM
    @version 3.0.0
 -->
<mapper namespace="com.mycuckoo.repository.uum.RoleMapper">
    <resultMap id="baseMap" type="com.mycuckoo.domain.uum.Role">
        <id property="roleId" column="role_id" />
        <result property="orgId" column="org_id" />
        <result property="name" column="name" />
        <result property="level" column="level" />
        <result property="status" column="status" />
        <result property="memo" column="memo" />
        <result property="updator" column="updator" />
        <result property="updateTime" column="update_time" />
        <result property="creator" column="creator" />
        <result property="createTime" column="create_time" />
    </resultMap>
    
    <sql id="columns">
        role_id, org_id, name, level, status, memo,
        updator, update_time, creator, create_time
    </sql>
    
    <sql id="table">
        cuckoo.uum_role
    </sql>

    <!-- 插入数据： 1.由数据库生成id并赋值到Role对象 2.输入对象参数 -->
    <insert id="save" parameterType="com.mycuckoo.domain.uum.Role"
            useGeneratedKeys="true" keyProperty="roleId" keyColumn="role_id">
        insert into <include refid="table" />
        (
            role_id,
            org_id,
            name,
            level,
            status,
            memo,
            updator,
            update_time,
            creator,
            create_time
        )
        values (
            #{roleId},
            #{orgId},
            #{name},
            #{level},
            #{status},
            #{memo},
            #{updator},
            #{updateTime},
            #{creator},
            #{createTime}
        )
    </insert>
    
    <!-- 更新数据： 1.输入对象参数 -->
    <update id="update" parameterType="com.mycuckoo.domain.uum.Role">
        update <include refid="table" />
        <set>
            <if test="name != null">name = #{name}, </if>
            <if test="level != null">level = #{level}, </if>
            <if test="memo != null">memo = #{memo}, </if>
            <if test="status != null">status = #{status}, </if>
            <if test="updator != null">updator = #{updator}, </if>
            <if test="updateTime != null">update_time = #{updateTime}, </if>
        </set>
        where role_id = #{roleId}
    </update>
    
    <!-- 删除数据 -->
    <delete id="delete" parameterType="long">
        delete from <include refid="table" /> where role_id = #{id}
    </delete>
    
    <!-- 获取数据: 输出直接映射到对象 -->
    <select id="get" parameterType="long" resultMap="baseMap">
        select <include refid="columns" />
        from <include refid="table" />
        where role_id = #{id}
    </select>
    
        <!-- 数据记录是否存在 -->
    <select id="exists" parameterType="long" resultType="boolean">
        select count(1) > 0
        from <include refid="table" />
        where role_id = #{id}
    </select>
    
    <!-- 根据条件查询角色, 映射到'role'-->
    <select id="findByPage" resultMap="baseMap">
        select <include refid="columns" />
        from <include refid="table" />
        where role_id != 0
        <if test="q.name !=null">
            and name like concat('%', #{q.name}, '%')
        </if>
        order by role_id desc
    </select>

    <!-- 根据角色名称统计角色记录 -->
    <select id="countByRoleName" parameterType="string" resultType="int">
        select count(1)
        from <include refid="table" />
        where name = #{name}
    </select>
    
</mapper> 
