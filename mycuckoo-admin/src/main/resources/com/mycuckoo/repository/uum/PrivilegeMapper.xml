<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    说明: PrivilegeMapper映射文件
    
    @author rutine
    @time Sep 23, 2014 10:10:51 AM
    @version 3.0.0
 -->
<mapper namespace="com.mycuckoo.repository.uum.PrivilegeMapper">
    <resultMap id="baseMap" type="com.mycuckoo.domain.uum.Privilege">
        <id property="privilegeId" column="privilege_id" />
        <result property="resourceId" column="resource_id" />
        <result property="ownerId" column="owner_id" />
        <result property="ownerType" column="owner_type" />              <!-- rol 角色 usr 用户 -->
        <result property="privilegeScope" column="privilege_scope" />    <!-- 针对操作 inc 包含 exc 不包含 all 全部 针对行 org 机构 rol 角色 usr 用户 -->
        <result property="privilegeType" column="privilege_type" />      <!-- row 行 opt 操作 -->
    </resultMap>
    
    <sql id="colums">
        privilege_id, resource_id, owner_id, owner_type, privilege_scope, privilege_type
    </sql>
    
    <sql id="table">
        cuckoo.uum_privilege
    </sql>

    <!-- 
        插入数据： 
        1.由数据库生成id并赋值到Privilege对象 
        2.输入对象参数 
    -->
    <insert id="save" parameterType="com.mycuckoo.domain.uum.Privilege"
            useGeneratedKeys="true" keyProperty="privilegeId" keyColumn="privilege_id">
        insert into <include refid="table" />
        (
            privilege_id,
            resource_id,
            owner_id,
            owner_type,
            privilege_scope,
            privilege_type
        )
        values (
            #{privilegeId},
            #{resourceId},
            #{ownerId},
            #{ownerType},
            #{privilegeScope},
            #{privilegeType}
        )
    </insert>
    
    <!-- 更新数据： 1.输入对象参数 -->
    <update id="update" parameterType="com.mycuckoo.domain.uum.Privilege">
        update <include refid="table" />
        <set>
            <if test="resourceId != null">resource_id = #{resourceId}, </if>
            <if test="ownerId != null">owner_id = #{ownerId}, </if>
            <if test="ownerType != null">owner_type = #{ownerType}, </if>
            <if test="privilegeScope != null">privilege_scope = #{privilegeScope}, </if>
            <if test="privilegeType != null">privilege_type = #{privilegeType}, </if>
        </set>
        where privilege_id = #{privilegeId}
    </update>
    
    <!-- 删除数据 -->
    <delete id="delete" parameterType="long">
        delete from <include refid="table" /> where privilege_id = #{id}
    </delete>
    
    <!--
        获取数据: 输出直接映射到对象
    -->
    <select id="get" parameterType="long" resultMap="baseMap">
        select <include refid="colums" />
        from <include refid="table" />
        where privilege_id = #{id}
    </select>
    
    <!-- 数据记录是否存在 -->
    <select id="exists" parameterType="long" resultType="boolean">
        select
            count(1) > 0 
        from <include refid="table" />
        where privilege_id = #{id}
    </select>

    <!-- 查询所有数据, 映射到 Privilege-->
    <select id="findByPage" resultMap="baseMap">
        select <include refid="colums" />
        from <include refid="table" />
    </select>
    
    <!-- 统计所有数据记录 -->
    <select id="count" resultType="long">
        select
            count(1) 
        from <include refid="table" />
    </select>
    
    <!-- 根据资源拥有者ID，拥有者类型和权限类型查询权限记录 1.输入map对象-->
    <select id="findByOwnIdAndPrivilegeType" parameterType="map" resultMap="baseMap">
        select <include refid="colums" />
        from <include refid="table" />
        <where>
            <if test="ownerIds !=null"> owner_id in
                <foreach collection="ownerIds" item="ownerId" open="(" separator="," close=")">
                    #{ownerId}
                </foreach>
            </if>
            <if test="ownerTypes !=null"> and owner_type in
                <foreach collection="ownerTypes" item="ownerType" open="(" separator="," close=")">
                    #{ownerType}
                </foreach>
            </if>
            <if test="privilegeTypes !=null"> and privilege_type in
                <foreach collection="privilegeTypes" item="privilegeType" open="(" separator="," close=")">
                    #{privilegeType}
                </foreach>
            </if>
        </where>
    </select>
    
    <!-- 统计用户特殊权限记录 -->
    <select id="countByUserIdAndOwnerType" parameterType="long" resultType="int">
        select count(1)
        from <include refid="table" />
        where owner_id = #{userId}
        and and owner_type = #{ownerType}
    </select>
    
    <!-- 根据条件删除权限 -->
    <delete id="deleteByOwnerIdAndOwnerType" parameterType="map">
        delete from <include refid="table" />
        <where>
            <if test="ownerId != null">
                owner_id = #{ownerId}
            </if>
            <if test="ownerType != null">
                and owner_type = #{ownerType}
            </if>
        </where>
    </delete>
    
    <!-- 根据条件删除权限 -->
    <delete id="deleteByOwnerIdAndPrivilegeType" parameterType="map">
        delete from <include refid="table" /> 
        <where>
            <if test="ownerId != null">
                owner_id = #{ownerId}
            </if>
            <if test="ownerType != null">
                and owner_type = #{ownerType}
            </if>
            <if test="privilegeType != null">
                and privilege_type = #{privilegeType}
            </if>
        </where>
    </delete>
    
    <!-- 根据条件删除权限 -->
    <delete id="deleteRowPrivilegeByOrgId" parameterType="map">
        delete from <include refid="table" /> 
        <where>
            <if test="resourceId != null">
                and resource_id = #{resourceId}
            </if>
            <if test="privilegeType != null">
                and privilege_type = #{privilegeType}
            </if>
            <if test="privilegeScope != null">
                and privilege_scope = #{privilegeScope}
            </if>
        </where>
    </delete>
    
    <!-- 删除模块操作关系时同时也删除模块操作权限 -->
    <delete id="deleteByModOptId" parameterType="map">
        delete from <include refid="table" />
        where resource_id in
        <foreach collection="modOptRefIds" item="modOptRefId" open="(" separator="," close=")">
            #{modOptRefId}
        </foreach>
        and privilege_type = #{privilegeType}
    </delete>
    
</mapper> 
