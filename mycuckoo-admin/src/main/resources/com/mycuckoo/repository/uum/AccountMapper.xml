<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycuckoo.repository.uum.AccountMapper">
    <resultMap id="baseMap" type="com.mycuckoo.domain.uum.Account">
        <id property="accountId" column="account_id" />
        <result property="account" column="account" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="errorCount" column="error_count" />
        <result property="ip" column="ip" />
        <result property="loginTime" column="login_time" />
        <result property="updateTime" column="update_time" />
        <result property="createTime" column="create_time" />
    </resultMap>

    <sql id="columns">
        account_id, account, phone, email,
        password, error_count, ip,
        login_time, update_time, create_time
    </sql>

    <sql id="table">
        uum_account
    </sql>

    <insert id="save" parameterType="com.mycuckoo.domain.uum.Account"
            useGeneratedKeys="true" keyProperty="accountId" keyColumn="account_id">
        insert into <include refid="table" />
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id, </if>
            <if test="account != null and account != ''">account, </if>
            <if test="phone != null and phone != ''">phone, </if>
            <if test="email != null and email != ''">email, </if>
            <if test="password != null and password != ''">password, </if>
            <if test="errorCount != null">error_count, </if>
            <if test="ip != null and ip != ''">ip, </if>
            <if test="loginTime != null">login_time, </if>
            <if test="updateTime != null">update_time, </if>
            <if test="createTime != null">create_time, </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId}, </if>
            <if test="account != null and account != ''">#{account}, </if>
            <if test="phone != null and phone != ''">#{phone}, </if>
            <if test="email != null and email != ''">#{email}, </if>
            <if test="password != null and password != ''">#{password}, </if>
            <if test="errorCount != null">#{errorCount}, </if>
            <if test="ip != null and ip != ''">#{ip}, </if>
            <if test="loginTime != null">#{loginTime}, </if>
            <if test="updateTime != null">#{updateTime}, </if>
            <if test="createTime != null">#{createTime}, </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.mycuckoo.domain.uum.Account">
        update <include refid="table" />
        <set>
            <if test="account != null">account = #{account}, </if>
            <if test="phone != null">phone = #{phone}, </if>
            <if test="email != null">email = #{email}, </if>
            <if test="password != null">password = #{password}, </if>
            <if test="errorCount != null">error_count = #{errorCount}, </if>
            <if test="ip != null">ip = #{ip}, </if>
            <if test="loginTime != null">login_time = #{loginTime}, </if>
            <if test="updateTime != null">update_time = #{updateTime}, </if>
        </set>
        where account_id = #{accountId}
    </update>

    <delete id="delete" parameterType="long">
        delete from <include refid="table" /> where account_id = #{accountId}
    </delete>

    <select id="get" parameterType="long" resultMap="baseMap">
        select <include refid="columns" />
        from <include refid="table" />
        where account_id = #{accountId}
    </select>

    <select id="findByPage" resultMap="baseMap">
        select <include refid="columns" />
        from <include refid="table" />
    </select>

    <select id="getBy" resultMap="baseMap">
        select
            t1.account_id,
            t1.account,
            t1.phone,
            t1.email,
            t1.password,
            t1.error_count,
            t1.login_time
        from <include refid="table" /> t1
        <where>
            <if test="account != null and account != ''">and t1.account = #{account}</if>
            <if test="phone != null and phone != ''">and t1.phone = #{phone}</if>
            <if test="email != null and email != ''">and t1.email = #{email}</if>
        </where>
    </select>

</mapper> 