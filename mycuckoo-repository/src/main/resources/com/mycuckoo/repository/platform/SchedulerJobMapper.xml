<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	说明: SchedulerJobMapper映射文件
	
	@author rutine
	@time Sep 23, 2014 9:54:38 AM
	@version 3.0.0
 -->
<mapper namespace="com.mycuckoo.repository.platform.SchedulerJobMapper">
	<resultMap id="baseMap" type="com.mycuckoo.domain.platform.SchedulerJob">
		<id property="jobId" column="job_id" />
		<result property="jobName" column="job_name" />
		<result property="jobClassDescript" column="job_class_descript" />
		<result property="triggerType" column="trigger_type" />
		<result property="timeExpress" column="time_express" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="repeatTime" column="repeat_time" />
		<result property="splitTime" column="split_time" />
		<result property="status" column="status" />
		<result property="memo" column="memo" />
		<result property="creator" column="creator" />
		<result property="createDate" column="create_date" />
	</resultMap>
	
	<sql id="colums">
		job_id, job_name, job_class_descript, trigger_type, time_express, 
		start_time, end_time, repeat_time, split_time, status, memo, creator, create_date
	</sql>

	<!-- 插入计划任务： 1.由数据库生成id并赋值到SchedulerJob对象 -->
	<insert id="save" parameterType="com.mycuckoo.domain.platform.SchedulerJob">
		<selectKey keyProperty="jobId" resultType="long" order="BEFORE">
			select nextval('cuckoo.syspl_scheduler_job_seq')
		</selectKey>
		insert into cuckoo.syspl_scheduler_job
		(
			job_id, job_name, job_class_descript, trigger_type, time_express, 
			start_time, end_time, repeat_time, split_time, status, memo, creator, create_date
		)
		values (
			#{jobId}, #{jobName}, #{jobClassDescript}, #{triggerType}, #{timeExpress}, 
			#{startTime}, #{endTime}, #{repeatTime}, #{splitTime}, #{status}, #{memo}, #{creator}, #{createDate}
		)
	</insert>
	
	<!-- 更新计划任务： 1.输入对象参数 -->
	<update id="update" parameterType="com.mycuckoo.domain.platform.SchedulerJob">
		update 
			cuckoo.syspl_scheduler_job
		set
			job_name								= #{jobName},
			job_class_descript			= #{jobClassDescript}, 
			trigger_type						= #{triggerType}, 
			time_express						= #{timeExpress}, 
			start_time							= #{startTime}, 
			end_time								= #{endTime},
			repeat_time							= #{repeatTime}, 
			split_time							= #{splitTime},
			status									= #{status}, 
			memo										= #{memo}, 
			creator									= #{creator}, 
			create_date							= #{createDate}
		where 
			job_id = #{jobId}
	</update>
	
	<!-- 删除计划任务 -->
	<delete id="delete" parameterType="long">
		delete from cuckoo.syspl_scheduler_job where job_id = #{id}
	</delete>
	
	<!--
		获取计划任务: 输出直接映射到对象, district_id 列要 as districtId 以方便映射创建 SchedulerJob 对象并赋值
	-->
	<select id="get" parameterType="long" resultType="com.mycuckoo.domain.platform.SchedulerJob">
		select 
			job_id							as jobId, 
			job_name						as jobName,
			job_class_descript 	as jobClassDescript, 
			trigger_type				as triggerType, 
			time_express				as timeExpress,
			start_time					as startTime, 
			end_time						as endTime, 
			repeat_time					as repeatTime, 
			split_time					as splitTime, 
			status							as status, 
			memo								as memo, 
			creator							as creator,
			create_date					as createDate
		from 
			cuckoo.syspl_scheduler_job
		where 
			job_id = #{id}
	</select>
	
	
	<!-- 判断计划任务是否存在 -->
	<select id="exists" parameterType="long" resultType="boolean">
		select
			count(1) > 0 
		from 
			cuckoo.syspl_scheduler_job
		where 
			job_id = #{id}
	</select>
	
	<!-- 按条件查询调度任务 -->
	<select id="findByPage" parameterType="map" resultMap="baseMap">
		select 
			*
		from 
			cuckoo.syspl_scheduler_job
		<where>
			<if test="jobName != null">
				and job_name like #{jobName}
			</if>
			<if test="triggerType != null">
				and trigger_type like #{triggerType}
			</if>
		</where>
		order by 
			job_id desc
	</select>
	
	<!-- 统计计划任务记录总数 -->
	<select id="count" resultType="long">
		select
			count(1) 
		from 
			cuckoo.syspl_scheduler_job
	</select>
	
	<!-- 根据任务名称统计任务数量 -->
	<select id="countByJobName" parameterType="string" resultType="int">
		select 
			count(*)
		from 
			cuckoo.syspl_scheduler_job
		where
			job_name = #{jobName}
	</select>
	
	<!-- 批量修改任务状态 -->
	<update id="updateStatuses">
		update 
			cuckoo.syspl_scheduler_job
		set
			status = #{status}
		where
			job_id in
			<foreach item="item" index="index" collection="jobIds" open="(" separator="," close=")">
				#{item}
			</foreach>
	</update>
	
	<!-- 根据任务id修改任务状态 -->
	<update id="updateStatus">
		update 
			cuckoo.syspl_scheduler_job
		set
			status = #{status}
		where
			job_id = #{jobId}
	</update>
	
</mapper> 
