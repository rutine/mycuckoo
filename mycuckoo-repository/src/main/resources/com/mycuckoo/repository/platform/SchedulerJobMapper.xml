<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    说明: SchedulerJobMapper映射文件
    
    @author rutine
    @time Sep 23, 2014 9:54:38 AM
    @version 3.0.0
 -->
<mapper namespace="com.mycuckoo.repository.platform.SchedulerJobMapper">
    <resultMap id="baseMap" type="com.mycuckoo.domain.platform.SchedulerJob">
        <id property="jobId" column="job_id" />
        <result property="jobName" column="job_name" />
        <result property="jobClassDescript" column="job_class_descript" />
        <result property="triggerType" column="trigger_type" />
        <result property="timeExpress" column="time_express" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="repeatTime" column="repeat_time" />
        <result property="splitTime" column="split_time" />
        <result property="status" column="status" />
        <result property="memo" column="memo" />
        <result property="creator" column="creator" />
        <result property="createDate" column="create_date" />
    </resultMap>
    
    <sql id="colums">
        job_id, job_name, job_class_descript, trigger_type, time_express, 
        start_time, end_time, repeat_time, split_time, status, memo, creator, create_date
    </sql>
    
    <sql id="table">
        cuckoo.syspl_scheduler_job
    </sql>

    <!-- 插入计划任务： 1.由数据库生成id并赋值到SchedulerJob对象 -->
    <insert id="save" parameterType="com.mycuckoo.domain.platform.SchedulerJob"
            useGeneratedKeys="true" keyProperty="jobId" keyColumn="job_id">
        insert into <include refid="table" />
        (
            job_id,
            job_name,
            job_class_descript,
            trigger_type,
            time_express,
            start_time,
            end_time,
            repeat_time,
            split_time,
            status,
            memo,
            creator,
            create_date
        )
        values (
            #{jobId},
            #{jobName},
            #{jobClassDescript},
            #{triggerType},
            #{timeExpress},
            #{startTime},
            #{endTime},
            #{repeatTime},
            #{splitTime},
            #{status},
            #{memo},
            #{creator},
            #{createDate}
        )
    </insert>
    
    <!-- 更新计划任务： 1.输入对象参数 -->
    <update id="update" parameterType="com.mycuckoo.domain.platform.SchedulerJob">
        update 
            <include refid="table" />
        <set>
            <if test="jobName != null">job_name = #{jobName}, </if>
            <if test="jobClassDescript != null">job_class_descript = #{jobClassDescript}, </if>
            <if test="triggerType != null">trigger_type = #{triggerType}, </if>
            <if test="timeExpress != null">time_express = #{timeExpress}, </if>
            <if test="startTime != null">start_time = #{startTime}, </if>
            <if test="endTime != null">end_time = #{endTime}, </if>
            <if test="repeatTime != null">repeat_time = #{repeatTime}, </if>
            <if test="splitTime != null">split_time = #{splitTime}, </if>
            <if test="status != null">status = #{status}, </if>
            <if test="memo != null">memo = #{memo}, </if>
        </set>
        where 
            job_id = #{jobId}
    </update>
    
    <!-- 删除计划任务 -->
    <delete id="delete" parameterType="long">
        delete from <include refid="table" /> where job_id = #{id}
    </delete>
    
    <!--
        获取计划任务: 输出直接映射到对象
    -->
    <select id="get" parameterType="long" resultMap="baseMap">
        select 
            <include refid="colums" />
        from 
            <include refid="table" />
        where 
            job_id = #{id}
    </select>
    
    
    <!-- 判断计划任务是否存在 -->
    <select id="exists" parameterType="long" resultType="boolean">
        select
            count(1) > 0 
        from 
            <include refid="table" />
        where 
            job_id = #{id}
    </select>
    
    <!-- 按条件查询调度任务 -->
    <select id="findByPage" parameterType="map" resultMap="baseMap">
        select 
            <include refid="colums" />
        from 
            <include refid="table" />
        <where>
            <if test="jobName != null">
                and job_name like #{jobName}
            </if>
            <if test="triggerType != null">
                and trigger_type like #{triggerType}
            </if>
        </where>
        order by 
            job_id desc
    </select>
    
    <!-- 统计计划任务记录总数 -->
    <select id="count" resultType="long">
        select
            count(1) 
        from 
            <include refid="table" />
    </select>
    
    <!-- 根据任务名称统计任务数量 -->
    <select id="countByJobName" parameterType="string" resultType="int">
        select 
            count(1)
        from 
            <include refid="table" />
        where
            job_name = #{jobName}
    </select>
    
    <!-- 批量修改任务状态 -->
    <update id="updateStatuses">
        update 
            <include refid="table" />
        set
            status = #{status}
        where
            job_id in
            <foreach item="item" index="index" collection="jobIds" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>
    
    <!-- 根据任务id修改任务状态 -->
    <update id="updateStatus">
        update 
            <include refid="table" />
        set
            status = #{status}
        where
            job_id = #{jobId}
    </update>
    
</mapper> 
