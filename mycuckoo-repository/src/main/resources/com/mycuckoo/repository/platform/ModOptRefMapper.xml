<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    说明: ModOptRefMapper映射文件
    
    @author rutine
    @time Sep 23, 2014 9:38:25 AM
    @version 3.0.0
 -->
<mapper namespace="com.mycuckoo.repository.platform.ModOptRefMapper">
    <resultMap id="baseMap" type="com.mycuckoo.domain.platform.ModOptRef">
        <id property="modOptId" column="mod_opt_id" />
        <association property="operate"
            javaType="com.mycuckoo.domain.platform.Operate"
            resultMap="com.mycuckoo.repository.platform.OperateMapper.baseMap"
            columnPrefix="opt_"/>
        <association property="moduleMemu"
            javaType="com.mycuckoo.domain.platform.ModuleMenu"
            resultMap="com.mycuckoo.repository.platform.ModuleMenuMapper.baseMap"
            columnPrefix="modu_"/>
    </resultMap>
    
    <sql id="colums">
        mod_opt_id, operate_id, module_id
    </sql>
    
    <sql id="table">
        cuckoo.sys_mod_opt_ref
    </sql>

    <!-- 插入模块操作关系： 1.由数据库生成id并赋值到ModOptRef对象 2.嵌套属性输入#{operate.operateId}-->
    <insert id="save" parameterType="com.mycuckoo.domain.platform.ModOptRef"
            useGeneratedKeys="true" keyProperty="modOptId" keyColumn="mod_opt_id">
        insert into <include refid="table" /> (
            mod_opt_id,
            operate_id,
            module_id
        )
        values (
            #{modOptId},
            #{operate.operateId},
            #{moduleMemu.moduleId}
        )
    </insert>
    
    <!-- 更新模块操作关系： 1.输入对象参数 2.嵌套属性输入#{operate.operateId} -->
    <update id="update" parameterType="com.mycuckoo.domain.platform.ModOptRef">
        update <include refid="table" />
        set
            operate_id                = #{operate.operateId},
            module_id                 = #{moduleMemu.moduleId}
        where mod_opt_id = #{modOptId}
    </update>
    
    <!-- 删除模块操作关系 -->
    <delete id="delete" parameterType="long">
        delete from <include refid="table" /> where mod_opt_id = #{id}
    </delete>
    
    <!--
        获取模块操作关系: 输出直接映射到 baseMap
    -->
    <select id="get" parameterType="long" resultMap="baseMap">
        select 
            t1.mod_opt_id                     as mod_opt_id,
            t1.operate_id                     as opt_operate_id,
            t1.module_id                      as modu_module_id,
            t2.name                           as opt_name,
            t2.icon_cls                       as opt_icon_cls,
            t2.order                          as opt_order,
            t2.group                          as opt_group,
            t2.status                         as opt_status,
            t2.code                           as opt_code,
            t3.parent_id                      as modu_parent_id,
            t3.name                           as modu_name,
            t3.code                           as modu_code,
            t3.icon_cls                       as modu_icon_cls,
            t3.level                          as modu_level,
            t3.`order`                        as modu_order,
            t3.belong_sys                     as modu_belong_sys,
            t3.page_type                      as modu_page_type,
            t3.status                         as modu_status
        from <include refid="table" /> t1
        left join cuckoo.sys_operate t2 on t2.operate_id = t1.operate_id
        left join cuckoo.sys_module_menu t3 on t3.module_id = t1.module_id
        where mod_opt_id = #{id}
    </select>
    
    <!-- 判断模块操作关系是否存在 -->
    <select id="exists" parameterType="long" resultType="boolean">
        select
            count(1) > 0 
        from <include refid="table" />
        where mod_opt_id = #{id}
    </select>

    <!-- 返回所有模块操作关系, 映射到 baseMap-->
    <select id="findByPage" resultMap="baseMap">
        select 
            t1.mod_opt_id               as mod_opt_id,
            t1.operate_id               as opt_operate_id,
            t1.module_id                as modu_module_id,
            t2.name                     as opt_name,
            t2.icon_cls                 as opt_icon_cls,
            t2.order                    as opt_order,
            t2.group                    as opt_group,
            t2.status                   as opt_status,
            t2.code                     as opt_code,
            t3.parent_id                as modu_parent_id,
            t3.name                     as modu_name,
            t3.code                     as modu_code,
            t3.icon_cls                 as modu_icon_cls,
            t3.level                    as modu_level,
            t3.`order`                  as modu_order,
            t3.belong_sys               as modu_belong_sys,
            t3.page_type                as modu_page_type,
            t3.status                   as modu_status
        from <include refid="table" /> t1
        left join cuckoo.sys_operate t2 on t2.operate_id = t1.operate_id
        left join cuckoo.sys_module_menu t3 on t3.module_id = t1.module_id
    </select>
    
        <!-- 统计模块操作关系记录总数 -->
    <select id="count" resultType="long">
        select count(1)
        from <include refid="table" />
    </select>
    
    <!-- 根据模块ID删除模块操作关系,级联删除权限 1 -->
    <delete id="deleteByModuleId" parameterType="long">
        delete from <include refid="table" />
        where module_id = #{id}
    </delete>
    
    <!-- 根据操作ID删除模块操作关系,级联删除权限 2 -->
    <delete id="deleteByOperateId" parameterType="long">
        delete from <include refid="table" />
        where operate_id = #{id}
    </delete>
    
    <!-- 根据操作ID查询模块操作关系, 映射到 baseMap-->
    <select id="findByOperateId" parameterType="long" resultMap="baseMap">
        select 
            mod_opt_id                    as mod_opt_id,
            operate_id                    as opt_operate_id,
            module_id                     as modu_module_id
        from <include refid="table" />
        where operate_id = #{id}
    </select>
    
    <!-- 根据模块ID查询模块操作关系, 映射到 baseMap-->
    <select id="findByModuleId" parameterType="long" resultMap="baseMap">
        select 
            mod_opt_id                    as mod_opt_id,
            operate_id                    as opt_operate_id,
            module_id                     as modu_module_id
        from <include refid="table" />
        where module_id = #{id}
    </select>
    
</mapper> 
