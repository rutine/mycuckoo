<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<display-name>mycuckoo</display-name>
	<description>mycuckoo 应用</description>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>mycuckoo.root</param-value>
	</context-param>
	<!-- fresh once every minutes -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<!-- 
		- Location of the Log4J config file, for initialization and refresh checks. 
		- Applied by Log4jConfigListener. 
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- 
		- Location of the XML file that defines the root application context. 
		- Applied by ContextLoaderListener. 
		- 
		- Can include "/WEB-INF/dataAccessContext-local.xml" for a single-database context, 
		- or "/WEB-INF/dataAccessContext-jta.xml" for a two-database context. 
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<!-- 設定Spring Context的默认Profile -->
	<context-param>
    	<param-name>spring.profiles.default</param-name>
    	<param-value>production</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- 
		- Loads the root application context of this web app at startup, 
		- by default from "/WEB-INF/applicationContext.xml". 
		- Note that you need to fall back to Spring's ContextLoaderServlet for 
		- J2EE servers that do not follow the Servlet 2.4 initialization order. 
		- 
		- Use WebApplicationContextUtils.getWebApplicationContext(servletContext) 
		- to access it anywhere in the web application, outside of the framework. 
		- 
		- The root context is the parent of all servlet-specific contexts. 
		- This means that its beans are automatically available in these child contexts, 
		- both for getBean(name) calls and (external) bean references. 
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- set before all struts.properties encoding GBK -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>

	<distributable />

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>login.html</welcome-file>
	</welcome-file-list>
	
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
</web-app>
